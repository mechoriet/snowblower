import com.github.jengelman.gradle.plugins.shadow.tasks.ShadowJar
import net.neoforged.snowblower.gradle.DependencyHashingTask
import net.neoforged.snowblower.gradle.ShadowJarFixupTask
import net.neoforged.gradleutils.PomUtilsExtension.License

plugins {
    id 'java'
    id 'maven-publish'
    id 'eclipse'
    id 'idea'
    id 'org.cadixdev.licenser' version '0.6.1'
    id 'com.github.johnrengelman.shadow' version '8.1.1'
    id 'net.neoforged.gradleutils' version '3.0.0-alpha.10'
}

group 'net.neoforged'
base {
    archivesName.set('snowblower')
}
gradleutils {
    setupSigning()
}

version = gradleutils.version
println "Version: $version"

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

repositories {
    mavenCentral()
    maven gradleutils.maven
}

configurations {
    shade
    implementation.extendsFrom shade
}

dependencies {
    compileOnly 'org.jetbrains:annotations:26.0.2'

    // When updating shade dependencies, you must also run the generateDependencyHashes task
    shade 'org.slf4j:slf4j-api:2.0.17'
    shade 'ch.qos.logback:logback-classic:1.5.18'
    shade 'org.eclipse.jgit:org.eclipse.jgit:7.2.0.202503040940-r'
    shade 'net.sf.jopt-simple:jopt-simple:6.0-alpha-3'
    shade 'com.google.code.gson:gson:2.12.1'
    shade 'net.neoforged:srgutils:1.0.10'
    shade 'org.vineflower:vineflower:1.11.1'
    shade 'net.neoforged.installertools:installertools:3.0.2'
    shade 'net.neoforged:AutoRenamingTool:2.0.8'
    shade 'net.neoforged:mergetool:2.0.6'

    shade 'org.bouncycastle:bcpkix-jdk18on:1.80'
    shade 'com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:2.18.3'

    shade 'io.jsonwebtoken:jjwt-api:0.12.6'
    shade 'io.jsonwebtoken:jjwt-impl:0.12.6'
    shade 'io.jsonwebtoken:jjwt-jackson:0.12.6'
    shade 'org.kohsuke:github-api:1.327'
}

tasks.register('generateDependencyHashes', DependencyHashingTask) {
    configuration = configurations.shade
    output = file('src/main/generated_resources/dependency_hashes.txt')
}

tasks.register('shadowJarFixup', ShadowJarFixupTask) {
    outputs.upToDateWhen { false }
    input = shadowJar.archiveFile
    output = shadowJar.archiveFile
}

afterEvaluate {
    tasks.named('generateMetadataFileForMavenJavaPublication').configure {
        dependsOn 'shadowJarFixup'
    }
}

sourceSets {
    main {
        resources {
            srcDirs += file('src/main/generated_resources')
        }
    }
}

tasks.named('processResources', ProcessResources).configure {
    dependsOn 'generateDependencyHashes'
    from 'gradlew'
    from 'gradlew.bat'
}

tasks.named('eclipseClasspath', GenerateEclipseClasspath).configure {
    dependsOn 'generateDependencyHashes'
}

tasks.named('idea').configure {
    dependsOn 'generateDependencyHashes'
}

tasks.named('jar', Jar).configure {
    from('gradle/wrapper') {
        into 'gradle/wrapper'
    }
    manifest {
        attributes([
            'Main-Class': 'net.neoforged.snowblower.Main',
            'Implementation-Version': "${project.version} (${gradleutils.gitInfo.commit})"
        ])
    }
}

tasks.named('shadowJar', ShadowJar).configure {
    archiveClassifier = 'all'
    configurations = [project.configurations.shade]

    from('gradle/wrapper') {
        into 'gradle/wrapper'
        rename '(.+).jar', '$1.zip'
    }

    finalizedBy 'shadowJarFixup'
}

artifacts {
    archives tasks.named('shadowJar', ShadowJar)
}

changelog {
    from '2.0'
}

license {
    header = file('LICENSE-header.txt')
    newLine = false
    exclude '**/*.properties'
    exclude '**/*.xml'
    skipExistingHeaders true
}

test {
    enabled = false
}

publishing {
    publications.register('mavenJava', MavenPublication) {
        from components.java
        artifactId = 'snowblower'
        gradleutils.sign(it)

        pom {
            name = 'Snowblower'
            description = 'A utility to create a git repository of Minecraft decompiled code to make it easier to see what changed between minecraft versions.'
            pomUtils.githubRepo(it, 'snowblower')
            pomUtils.license(it, License.MIT)
        }
    }

    repositories {
        maven gradleutils.publishingMaven
    }
}
